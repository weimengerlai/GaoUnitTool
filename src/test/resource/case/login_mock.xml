<?xml version="1.0" encoding="UTF-8"?>
<testcase id="login_case" desc="登录的所有的测试用例">


    <!--每一条测试用例标签case-->
    <!-- 输入用户名为空，密码为空的测试用例 -->
    <case id="login_user_name_mock" desc="mock第三方数据" tag="login_user_name">

        <!--网络请求的参数-->
        <!--测试用例提交的参数 执行网络请求的标签 -->
        <!-- service 主要就是设置网络请求的URL 请求类型 请求方法 参数-->
        <call service="loginUserPwd">
            <!--参数类型 paran-->
            <param name="username">zhangsan</param>
            <param name="password">123456</param>
        </call>
        <!-- 在控制台输出标签 如果有这个标签就输出内容,没有就不输出内容,就是接口返回的数据-->
        <print/>
        <!-- 添加断言标签 分为结果断言 和 数据库断言 -->
        <Assert>
            <!-- 结果断言 -->
            <!-- 断言状态 statue-->
            <result statue = "0">
                <JsonRsult>
                    {
                        "mockJson":null,
                        "mockUrl":null,
                        "uid":null,
                        "username":"zhangsan",
                        "password":"123456",
                        "realName":null,
                        "message":"mock第三方数据成功基本上",
                        "userId":"10000","stasus":0
                    }
                </JsonRsult>
                <!-- modk 掉第三方请求 -->
                <MockResult mockUrl = "http://127.0.0.1:8088/qiezziLogin_war/user/login1" >

                    {
                        "stasus":0,
                        "username":"zhangsan",
                        "message":"mock第三方数据成功基本上",
                        "userId":10000
                    }
                </MockResult>
            </result>

            <!--执行SQL 数据库的sql-->
          <!--  <SQL database="jenkins">

                &lt;!&ndash;执行是sql&ndash;&gt;
                <exe_sql>
                    SELECT * from Login where username = 'zhangsan' and passwrod = '123456'
                </exe_sql>

                &lt;!&ndash;断言返回结果&ndash;&gt;
                <sql_result>

                    {
                        "login_id":10000,
                        "username":"zhangsan"
                    }

                </sql_result>

            </SQL>-->
        </Assert>
    </case>

    <!-- 测试dunbo接口输入用户名和密码  -->
    <case id="login_dubbo_user_name" desc="mock第三方数据" tag="login_user_name">

        <!--网络请求的参数-->
        <!--测试用例提交的参数 执行网络请求的标签 -->
        <!-- service 主要就是设置网络请求的URL 请求类型 请求方法 参数-->
        <call service="loginDubboUserPwd">
            <!--参数类型 paran-->
            <param name="username">zhangsan</param>
            <param name="password">123456</param>
        </call>
        <!-- 在控制台输出标签 如果有这个标签就输出内容,没有就不输出内容,就是接口返回的数据-->
        <print/>
        <!-- 添加断言标签 分为结果断言 和 数据库断言 -->
        <Assert>
            <!-- 结果断言 -->
            <!-- 断言状态 statue-->
            <result statue = "0">
                <JsonRsult>
                    {
                        "password":"123456",
                        "userId":10000,
                        "username":"zhangsan"
                    }
                </JsonRsult>
                <!-- modk 掉第三方请求 -->
                <MockResult mockUrl = "con.gaoxuejun.login.LoginDubbo"
                            mockMethod = "findByNamePwd"
                            mockEntity = "con.gaoxuejun.entity.LoginSql">
                    {
                        "stasus":0,
                        "username":"zhangsan",
                        "message":"mock第三方数据成功基本上",
                        "userId":10000
                    }
                </MockResult>
            </result>

            <!--执行SQL 数据库的sql-->
            <!--  <SQL database="jenkins">

                  &lt;!&ndash;执行是sql&ndash;&gt;
                  <exe_sql>
                      SELECT * from Login where username = 'zhangsan' and passwrod = '123456'
                  </exe_sql>

                  &lt;!&ndash;断言返回结果&ndash;&gt;
                  <sql_result>

                      {
                          "login_id":10000,
                          "username":"zhangsan"
                      }

                  </sql_result>

              </SQL>-->
        </Assert>
    </case>

    <!-- 测试请求http mockk dunbo接口输入用户名和密码  -->
    <case id="login_http_user_name_mock_dubbo" desc="mock第三方数据" tag="login_user_name">

        <!--网络请求的参数-->
        <!--测试用例提交的参数 执行网络请求的标签 -->
        <!-- service 主要就是设置网络请求的URL 请求类型 请求方法 参数-->
        <call service="loginUserPwdMockDubbo">
            <!--参数类型 paran-->
            <param name="username">zhangsan</param>
            <param name="password">123456</param>
        </call>
        <!-- 在控制台输出标签 如果有这个标签就输出内容,没有就不输出内容,就是接口返回的数据-->
        <print/>
        <!-- 添加断言标签 分为结果断言 和 数据库断言 -->
        <Assert>
            <!-- 结果断言 -->
            <!-- 断言状态 statue-->
            <result statue = "0">
                <JsonRsult>
                    {
                        "status":0,
                        "message":"请求数据成功",
                        "data":
                            {
                                "userId":50000,
                                "username":"zhangsan俩看"
                            }
                    }
                </JsonRsult>
                <!-- modk 掉第三方请求 -->
                <MockResult mockUrl = "con.gaoxuejun.login.LoginDubbo"
                            mockMethod = "findByNamePwd"
                            mockEntity = "con.gaoxuejun.entity.LoginSql">
                    {
                        "userId":50000,
                        "username":"zhangsan俩看",
                        "password":"123456"
                    }
                </MockResult>
            </result>

            <!--执行SQL 数据库的sql-->
            <!--  <SQL database="jenkins">

                  &lt;!&ndash;执行是sql&ndash;&gt;
                  <exe_sql>
                      SELECT * from Login where username = 'zhangsan' and passwrod = '123456'
                  </exe_sql>

                  &lt;!&ndash;断言返回结果&ndash;&gt;
                  <sql_result>

                      {
                          "login_id":10000,
                          "username":"zhangsan"
                      }

                  </sql_result>

              </SQL>-->
        </Assert>
    </case>
</testcase>
